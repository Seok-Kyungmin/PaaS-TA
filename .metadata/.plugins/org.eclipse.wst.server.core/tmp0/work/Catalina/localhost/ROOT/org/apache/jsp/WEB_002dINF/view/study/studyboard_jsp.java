/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.66
 * Generated at: 2021-11-18 08:01:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.study;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.List;
import poly.dto.BoardDTO;
import poly.util.CmmUtil;
import poly.dto.StudyListDTO;
import poly.dto.UserDTO;
import static poly.util.CmmUtil.nvl;

public final class studyboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/view/sidebar.jsp", Long.valueOf(1637222448515L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("poly.dto.UserDTO");
    _jspx_imports_classes.add("static poly.util.CmmUtil.nvl");
    _jspx_imports_classes.add("poly.dto.StudyListDTO");
    _jspx_imports_classes.add("poly.util.CmmUtil");
    _jspx_imports_classes.add("poly.dto.BoardDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	UserDTO uDTO = (UserDTO) request.getAttribute("rDTO");
	String user_id = uDTO.getUser_id();
	String user_name = uDTO.getUser_name();

	StudyListDTO sDTO = (StudyListDTO) request.getAttribute("sDTO");
	String study_name = (String) request.getAttribute("study_name");
	String study_notify = CmmUtil.nvl(sDTO.getStudy_notify());
	String study_title = CmmUtil.nvl(sDTO.getStudy_title());
	String study_creator = CmmUtil.nvl(sDTO.getStudy_creator());
	String study_seq = CmmUtil.nvl(sDTO.getStudy_seq());
	System.out.println("study_creator : " + study_creator);
	System.out.println("study_seq : " + study_seq);

	String[] study_group = user_name.split("");
	int study_count = study_group.length;

	// 게시판 조회 결과 보여주기
	List<BoardDTO> rList = (List<BoardDTO>) request.getAttribute("rList");
	if (rList == null) {
		rList = new ArrayList<BoardDTO>();
	}

	// 스터디그룹에 가입한 유저의 MBTI정보
	List<String> mList = (List<String>) request.getAttribute("mList");
	String member_mbti = String.join(",", mList);

	int mbti_score = (int) request.getAttribute("mbti_score");

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<title>Spoilbroth_StudyGroup</title>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta name=\"viewport\"\n");
      out.write("	content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("\n");
      out.write("<link\n");
      out.write("	href=\"https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<link\n");
      out.write("	href=\"https://fonts.googleapis.com/css?family=Lora:400,400i,700,700i&display=swap\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<link\n");
      out.write("	href=\"https://fonts.googleapis.com/css?family=Abril+Fatface&display=swap\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"/andrea-master/css/open-iconic-bootstrap.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/animate.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/owl.carousel.min.css\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"/andrea-master/css/owl.theme.default.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/magnific-popup.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/aos.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/ionicons.min.css\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"/andrea-master/css/bootstrap-datepicker.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/jquery.timepicker.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/flaticon.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/icomoon.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/andrea-master/css/style.css\">\n");
      out.write("<link\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@700&display=swap\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<!-- profile -->\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/profile.css\">\n");
      out.write("<link\n");
      out.write("	href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\" id=\"bootstrap-css\">\n");
      out.write("<script\n");
      out.write("	src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\n");
      out.write("<!-- profile -->\n");
      out.write("\n");
      out.write("<!-- owl -->\n");
      out.write("<script src=\"/andrea-master/js/jquery.min.js\"></script>\n");
      out.write("<script\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.2.1/owl.carousel.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.2.1/assets/owl.carousel.min.css\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.2.1/assets/owl.theme.default.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/owlowl.css\">\n");
      out.write("<!-- data table -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css\">\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("#time_modal {\n");
      out.write("	display: none;\n");
      out.write("	width: 300px;\n");
      out.write("	padding: 20px 60px;\n");
      out.write("	background-color: #fefefe;\n");
      out.write("	border: 1px solid #888;\n");
      out.write("	border-radius: 3px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#time_modal .modal_close_btn {\n");
      out.write("	position: absolute;\n");
      out.write("	top: 10px;\n");
      out.write("	right: 10px;\n");
      out.write("}\n");
      out.write(" #back {\n");
      out.write("      width: 144px;\n");
      out.write("      border-left-width: 0px;\n");
      out.write("      margin-top: 19px;\n");
      out.write("      margin-left: 22px;\n");
      out.write("      padding-top: 5px;\n");
      out.write("      padding-right: 10px;\n");
      out.write("      padding-left: 10px;\n");
      out.write("      padding-bottom: 12px;\n");
      out.write("   }\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body data-aos-easing=\"slide\" data-aos-duration=\"800\" data-aos-delay=\"0\">\n");
      out.write("\n");
      out.write("	<!-- 전체 페이지 START-->\n");
      out.write("	<div id=\"colorlib-page\">\n");
      out.write("		<!-- START 왼쪽 NANI -->\n");
      out.write("		");
      out.write('\n');
      out.write('\n');


	String id = nvl((String)session.getAttribute("user_id"));
	String date = nvl((String)session.getAttribute("join_dt")); 

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<!-- 구글폰트 -->\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Do+Hyeon&family=Nanum+Pen+Script&display=swap\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<a href=\"#\" class=\"js-colorlib-nav-toggle colorlib-nav-toggle\"><i></i></a>\n");
      out.write("		<aside id=\"colorlib-aside\" role=\"complementary\" class=\"js-fullheight\"\n");
      out.write("			style=\"height: 812px;\">\n");
      out.write("			\n");
      out.write("			<nav id=\"colorlib-main-menu\" role=\"navigation\">\n");
      out.write("			<a href=\"single.html\" class=\"img img-2\" style=\"background-image: url(/andrea-master/images/image_1.jpg);\"></a>\n");
      out.write("			<div class=\"colorlib-active\">\n");
      out.write("			<ul>\n");
      out.write("				<li>\n");
      out.write("					");
if(date.isEmpty()) { 
      out.write("\n");
      out.write("						<a href=\"/user/login.do\" style=\"font-family: 'Do Hyeon', sans-serif; font-family: 'Nanum Pen Script', cursive; font-size: 32px;\">가입 하시겠습니까?</a>\n");
      out.write("					");
 } else { 
      out.write("\n");
      out.write("						<a href=\"#\" style=\"font-family: 'Do Hyeon', sans-serif; font-family: 'Nanum Pen Script', cursive; font-size: 24px;\" method=post>첫방문  : ");
      out.print(date );
      out.write("</a>\n");
      out.write("					");
} 
      out.write("\n");
      out.write("				\n");
      out.write("				</li>\n");
      out.write("				<li>\n");
      out.write("					");
if(id.isEmpty()) { 
      out.write("\n");
      out.write("						<a href=\"/user/login.do\" style= \"font-family: 'Nanum Pen Script', cursive; font-size: 20px; padding-left: 70px;\">Sign in</a>\n");
      out.write("					");
 } else { 
      out.write("\n");
      out.write("						<a href=\"/user/logOut.do\" style=\" font-family: 'Nanum Pen Script', cursive; font-size: 24px; padding-left: 40px;\">");
      out.print(id );
      out.write(" 님 Log out</a>\n");
      out.write("					");
} 
      out.write("\n");
      out.write("				</li>\n");
      out.write("			</ul>\n");
      out.write("		</div>\n");
      out.write("		<hr style=\" width: 90%; height: 1.5px; border: none; background-color: #666666;\"/>\n");
      out.write("				<ul class=\"nav2\">\n");
      out.write("					<li class=\"colorlib-active\"><a href=\"/spoilbroth/mystudy.do\">Home</a></li>\n");
      out.write("					<li class=\"nana\"><a href=\"/mbti/mbtimain.do\">MBTI Analysis</a></li>\n");
      out.write("					<li class=\"nana2\"><a href=\"/study/match.do\">Study Matching</a></li>\n");
      out.write("					<li class=\"nana3\"><a href=\"/study/contest.do\">Study Imformation</a></li>\n");
      out.write("					<li class=\"nana4\"><a href=\"/mypage/setting.do\">Setting</a></li>\n");
      out.write("				</ul>\n");
      out.write("			</nav>\n");
      out.write("\n");
      out.write("			<div class=\"colorlib-footer\" style=\"padding-bottom: 20px;\">\n");
      out.write("				<h1 id=\"colorlib-logo\" class=\"mb-4\">\n");
      out.write("					<a href=\"/spoilbroth/mystudy.do\" style=\"background-image: url(/andrea-master/images/bg_1.jpg); font-size: 57px;\">Spoilbroth</a>\n");
      out.write("				</h1>\n");
      out.write("				<span style=\"font-family: 'Do Hyeon', sans-serif; font-family: 'Nanum Pen Script', cursive; font-size: 28px;\">요리사가 너무 많으면 수프를 망친다.</span>\n");
      out.write("				<div class=\"mb-4\">\n");
      out.write("					<h3>Subscribe for Spoilbroth</h3>\n");
      out.write("					<form action=\"#\" class=\"colorlib-subscribe-form\">\n");
      out.write("						<div class=\"form-group d-flex\">\n");
      out.write("							<div class=\"icon\">\n");
      out.write("								<span class=\"icon-paper-plane\"></span>\n");
      out.write("							</div>\n");
      out.write("							<input type=\"text\" class=\"form-control\"\n");
      out.write("								placeholder=\"Enter Email Address\">\n");
      out.write("						</div>\n");
      out.write("					</form>\n");
      out.write("				</div>\n");
      out.write("				\n");
      out.write("			</div>\n");
      out.write("		</aside>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script src=\"/andrea-master/js/jquery.min.js\"></script>\n");
      out.write("</body>\n");
      out.write("<script>\n");
      out.write("$(function(){\n");
      out.write("    var url = window.location.pathname;  \n");
      out.write("    var activePage = url.substring(url.lastIndexOf('/')+1);\n");
      out.write("    console.log(\"activePage: \" + activePage);\n");
      out.write("    \n");
      out.write("    $('.nav2 li a').each(function(){  \n");
      out.write("        var currentPage = this.href.substring(this.href.lastIndexOf('/')+1);\n");
      out.write("		console.log(\"currentPage : \"+currentPage)\n");
      out.write("		\n");
      out.write("        if (activePage == currentPage) {\n");
      out.write("        	$(\".nav2\").find(\".colorlib-active\").removeClass(\"colorlib-active\");\n");
      out.write("            $(this).parent().addClass('colorlib-active');\n");
      out.write("            $(this).addClass('colorlib-active');\n");
      out.write("            \n");
      out.write("        }else if(activePage == \"mbtianalysis.do\"){\n");
      out.write("        	$(\".nav2\").find(\".colorlib-active\").removeClass(\"colorlib-active\");\n");
      out.write("        	$('.nana').addClass('colorlib-active');\n");
      out.write("        }else if(activePage == \"match2.do\"){\n");
      out.write("        	$(\".nav2\").find(\".colorlib-active\").removeClass(\"colorlib-active\");\n");
      out.write("        	$('.nana2').addClass('colorlib-active');\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("})\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</html>");
      out.write("\n");
      out.write("		<!-- END 왼쪽 NANI -->\n");
      out.write("\n");
      out.write("		<!-- START 상단 NANI -->\n");
      out.write("		<!-- <div class=\"padding\" style=\"padding-bottom: 20px;\"></div>\n");
      out.write("		<div class=\"sidebar-heading\" style=\"text-align: center; position: fixed; top: 0; width: 100%; height:140px; background-color: #fff; z-index: 5; padding-top: 20px;font-weight: 500; color: black;\">\n");
      out.write("		<img alt=\"\" src=\"/img/DanimgilLogo.png\" style=\"width:100px; display: block; margin: 15px auto;  margin-top: 0px\">\n");
      out.write("			<hr style=\"width: 100%; height: 1.5px; border: none; background-color: #666666; margin:4px;\">\n");
      out.write("			<h4 class=\"title\" style=\"font-family: 'Poppins', sans-serif; text-align: right; padding-right:25px; font-size: 15px; font-weight: 500;\">STUDY MATCHING</h4>\n");
      out.write("		 -->\n");
      out.write("		<div class=\"padding\" style=\"padding-bottom: 55px;\"></div>\n");
      out.write("		<div class=\"sidebar-heading\"\n");
      out.write("			style=\"text-align: center; position: fixed; top: 0; width: 100%; height: 90px; background-color: #fff; z-index: 5; padding-top: 20px; font-weight: 500; color: black;\">\n");
      out.write("			<div class=\"hh\" style=\"font-size: 23px; height: 32px;\">\n");
      out.write("				<span>S</span><span>T</span><span>U</span><span>D</span><span>Y</span><span>&nbsp;</span><span>M</span><span>A</span><span>T</span><span>C</span><span>H</span><span>I</span><span>N</span><span>G</span>\n");
      out.write("			</div>\n");
      out.write("			<hr\n");
      out.write("				style=\"width: 90%; height: 1.5px; border: none; background-color: #666666;\">\n");
      out.write("\n");
      out.write("		</div>\n");
      out.write("		<!-- END 상단 NANI -->\n");
      out.write("		\n");
      out.write("		<!-- 메인 페이지 START-->\n");
      out.write("		<div id=\"colorlib-main\" style=\"margin-top: 20px;\">\n");
      out.write("			<section class=\"ftco-section ftco-no-pt ftco-no-pb\">\n");
      out.write("				<div class=\"container\">\n");
      out.write("\n");
      out.write("					<!-- 왼쪽 오른쪽 2분할 -->\n");
      out.write("					<div class=\"row d-flex\">\n");
      out.write("\n");
      out.write("						<!-- 왼쪽 스크립트 -->\n");
      out.write("						<div class=\"col-xl-8 px-md-5\" style=\"background-color: #f7fbff;\">\n");
      out.write("							<!-- 스터디 개설  START -->\n");
      out.write("							<div class=\"\" style=\"margin-left: 20px\">\n");
      out.write("								<label\n");
      out.write("									style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 25px; margin-top: 18px; margin-bottom: -8px;\">\n");
      out.write("									");
      out.print(study_name);
      out.write(" 팀의 커뮤니티\n");
      out.write("								</label>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"emp-profile\">\n");
      out.write("								<!-- 사진 프로필 START -->\n");
      out.write("								<div class=\"d-flex card p-3\" style=\"magin: -11px;\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("									<form id=\"uploadForm\" enctype=\"multipart/form-data\">\n");
      out.write("										<div class=\"d-flex align-items-center\">\n");
      out.write("											<div class=\"image\">\n");
      out.write("												<img id=\"preview-image\"\n");
      out.write("													src=\"/getStudyImage.do?study_name=");
      out.print(study_name);
      out.write("\"\n");
      out.write("													class=\"rounded\" width=\"100%\">\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("										<div id=\"input-image\"\n");
      out.write("											class=\"button mt-2 d-flex flex-row align-items-center\">\n");
      out.write("											<input type=\"file\" id=\"file\" name=\"fileUplod2\"\n");
      out.write("												onchange=\"changeValue(this)\" style=\"display: none\" /> <input\n");
      out.write("												type=\"hidden\" name=\"study_name\" value=\"");
      out.print(study_name);
      out.write("\">\n");
      out.write("											<button class=\"btn btn-sm btn-primary w-100\" id=\"btn-upload\"\n");
      out.write("												style=\"margin-right: 2px;\">Select File</button>\n");
      out.write("											<button id=\"btnUpload\" class=\"btn btn-sm btn-primary w-100\"\n");
      out.write("												style=\"margin-left: 2px;\">Register</button>\n");
      out.write("										</div>\n");
      out.write("									</form>\n");
      out.write("\n");
      out.write("									<!-- 출첵 버튼 -->\n");
      out.write("		                           <div class=\"button mt-2 d-flex flex-row align-items-center\">\n");
      out.write("		                           <button onclick=\"timeSetting();\" class=\"btn btn-sm btn-primary w-100\" id=\"timeSetting()\"\n");
      out.write("		                                    style=\"margin-right: 2px;\">출석</button>\n");
      out.write("		                           \n");
      out.write("		                           <button id=\"exit\" class=\"btn btn-sm btn-primary w-100\"\n");
      out.write("		                                    style=\"margin-left: 2px;\">나가기</button>\n");
      out.write("		                           </div>\n");
      out.write("		                           <script type=\"text/javascript\">\n");
      out.write("		                              function timeSetting() {\n");
      out.write("		                                 let time = prompt(\"공부할 시간을 입력해주세요.\", \"3:30\");\n");
      out.write("		                              }\n");
      out.write("		                              \n");
      out.write("		                           </script>\n");
      out.write("									\n");
      out.write("									<!-- 스터디 정보 -->\n");
      out.write("									<hr>\n");
      out.write("									<div class=\"form-group\" style=\"margin-bottom: 5px;\">\n");
      out.write("										<label\n");
      out.write("											style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 18px; margin-bottom: 5px;\">\n");
      out.write("											Title : ");
      out.print(study_title);
      out.write("\n");
      out.write("										</label><br> <label\n");
      out.write("											style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 18px; margin-bottom: 5px;\">\n");
      out.write("											스터디 시작일 : ");
      out.print(sDTO.getStudy_dt());
      out.write("\n");
      out.write("										</label><br> <label\n");
      out.write("											style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 18px; margin-bottom: 5px;\">\n");
      out.write("											멤버 : ");
      out.print(sDTO.getStudy_member());
      out.write("\n");
      out.write("										</label><br> <label\n");
      out.write("											style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 18px; margin-bottom: 5px;\">\n");
      out.write("											멤버의 MBTI : ");
      out.print(member_mbti);
      out.write("\n");
      out.write("										</label><br>\n");
      out.write("										<div class=\"profile-card\"\n");
      out.write("											style=\"padding-right: 3px; padding-left: 3px;\">\n");
      out.write("											");

												for (int k = 0; k < mbti_score; k++) {
											
      out.write("\n");
      out.write("											<svg version=\"1.1\" id=\"Capa_1\"\n");
      out.write("												xmlns=\"http://www.w3.org/2000/svg\"\n");
      out.write("												xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n");
      out.write("												width=\"22\" height=\"22\" viewBox=\"0 0 422.448 422.448\"\n");
      out.write("												style=\"enable-background: new 0 0 422.448 422.448;\"\n");
      out.write("												xml:space=\"preserve\">\n");
      out.write("										<path style=\"fill:#FF4979;\"\n");
      out.write("													d=\"M387.15,59.153c-47.066-47.065-123.374-47.065-170.44,0l-4,4l-4-4\n");
      out.write("											C163.342,10.448,87.081,7.742,38.376,53.109s-51.412,121.628-6.044,170.334c1.885,2.023,3.839,3.981,5.858,5.871l170.8,170.8\n");
      out.write("											c2.018,1.981,5.217,2.085,7.36,0.24l170.8-170.8c47.065-47.066,47.065-123.374,0-170.44L387.15,59.153z\" />\n");
      out.write("										</svg>\n");
      out.write("											");

												}
											
      out.write("\n");
      out.write("										</div>\n");
      out.write("									</div>\n");
      out.write("\n");
      out.write("									<div class=\"form-group mt-3\">\n");
      out.write("										<label\n");
      out.write("											style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 18px; margin-bottom: 0px;\">\n");
      out.write("											알림</label>\n");
      out.write("										<div class=\"card fontstyle p-2\"\n");
      out.write("											style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 400; font-size: 15px; margin-bottom: 0px;\">\n");
      out.write("											<div id=\"text_aera\">");
      out.print(sDTO.getStudy_notify());
      out.write("</div>\n");
      out.write("											<!-- 스터디 개설자만 알림을 수정할 수 있음 -->\n");
      out.write("											");
 if(sDTO.getStudy_creator().equals(uDTO.getUser_id())) { 
      out.write("\n");
      out.write("											<button class=\"btn btn-sm btn-primary w-100\" id=\"btn-upload\"\n");
      out.write("												style=\"margin-right: 2px;\" data-toggle=\"modal\"\n");
      out.write("												data-target=\"#exampleModalCenter\">알림 수정하기</button>\n");
      out.write("											");
 }else{} 
      out.write("\n");
      out.write("										</div>\n");
      out.write("										<!-- modal 알림창  -->\n");
      out.write("										<!-- Modal -->\n");
      out.write("										<div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\"\n");
      out.write("											role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\"\n");
      out.write("											aria-hidden=\"true\"\n");
      out.write("											style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 18px; margin-bottom: 0px;\">\n");
      out.write("											<div class=\"modal-dialog modal-dialog-centered\"\n");
      out.write("												role=\"document\">\n");
      out.write("												<div class=\"modal-content\">\n");
      out.write("													<div class=\"modal-header\">\n");
      out.write("														<h5 class=\"modal-title\" style=\"font-size: 30px;\"\n");
      out.write("															id=\"exampleModalLongTitle\">알림 수정하기</h5>\n");
      out.write("														<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n");
      out.write("															aria-label=\"Close\">\n");
      out.write("															<span aria-hidden=\"true\">&times;</span>\n");
      out.write("														</button>\n");
      out.write("													</div>\n");
      out.write("													<div class=\"modal-body\">\n");
      out.write("														<textarea cols=\"50\" rows=\"10\" style=\"width: 100%\"\n");
      out.write("															id=\"text_modify\">");
      out.print(sDTO.getStudy_notify());
      out.write("</textarea>\n");
      out.write("													</div>\n");
      out.write("													<div class=\"modal-footer\" style=\"font-size: 25px;\">\n");
      out.write("														<button type=\"button\" class=\"btn btn-secondary\"\n");
      out.write("															data-dismiss=\"modal\">닫기</button>\n");
      out.write("														<button type=\"button\" class=\"btn btn-primary\"\n");
      out.write("															onclick=\"text_modify();\">수정하기</button>\n");
      out.write("													</div>\n");
      out.write("												</div>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("										<!-- model 끝 -->\n");
      out.write("\n");
      out.write("									</div>\n");
      out.write("									<!-- 멀티 게시판  -->\n");
      out.write("									<div style=\"display: flex\">\n");
      out.write("										<div style=\"margin: 0 auto;\">\n");
      out.write("											<label\n");
      out.write("												style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 25px; margin-bottom: 0px;\">\n");
      out.write("												게시판</label>\n");
      out.write("										</div>\n");
      out.write("										<div>\n");
      out.write("											<button type=\"button\" class=\"btn btn-outline-warning\"\n");
      out.write("												onclick=\"location.href='/chat/chatting.do?study_name=거북목'\"\n");
      out.write("												style=\"font-weight: 600; color: tomato; border-width: revert; border-color: tomato;\">\n");
      out.write("												Let's 채팅</button>\n");
      out.write("										</div>\n");
      out.write("									</div>\n");
      out.write("									<hr>\n");
      out.write("									<!-- 게시판 -->\n");
      out.write("									<table id=\"example\" class=\"display\"\n");
      out.write("										style=\"width: 100%; font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 15px; margin-bottom: 0px;\">\n");
      out.write("										<thead style=\"font-size: 15px\";>\n");
      out.write("											<tr>\n");
      out.write("												<th>no</th>\n");
      out.write("												<th>title</th>\n");
      out.write("												<th>name</th>\n");
      out.write("												<th>v</th>\n");
      out.write("\n");
      out.write("											</tr>\n");
      out.write("										</thead>\n");
      out.write("										");

											for (int i = 0; i < rList.size(); i++) {
												BoardDTO rDTO = rList.get(i);
												if (rDTO == null) {
													rDTO = new BoardDTO();
												}
										
      out.write("\n");
      out.write("										<tr>\n");
      out.write("											<td style=\"font-size: 15px\";>\n");
      out.write("												");

													// 공지글이라면, [공지]표시
														if (CmmUtil.nvl(rDTO.getNotice_yn()).equals("1")) {
															out.print("<b>[공지]</b>");
														} else {
															out.print(CmmUtil.nvl(rDTO.getNotice_seq()));
														}
												
      out.write("\n");
      out.write("											</td>\n");
      out.write("											<td><a style=\"color: brown;\"\n");
      out.write("												href=\"javascript:doDetail('");
      out.print(CmmUtil.nvl(rDTO.getNotice_seq()));
      out.write('\'');
      out.write(',');
      out.write('\'');
      out.print(CmmUtil.nvl(study_seq));
      out.write("');\">\n");
      out.write("													");
      out.print(CmmUtil.nvl(rDTO.getTitle()));
      out.write("</a></td>\n");
      out.write("											<th style=\"font-size: 15px\";>");
      out.print(CmmUtil.nvl(rDTO.getUser_name()));
      out.write("\n");
      out.write("											</th>\n");
      out.write("											<th style=\"font-size: 15px\";>");
      out.print(CmmUtil.nvl(rDTO.getRead_cnt()));
      out.write("\n");
      out.write("											</th>\n");
      out.write("										</tr>\n");
      out.write("										");

											}
										
      out.write("\n");
      out.write("									</table>\n");
      out.write("									<div\n");
      out.write("										style=\"font-family: 'Nanum Gothic', sans-serif; font-weight: 600; font-size: 18px; margin-bottom: 0px;\">\n");
      out.write("										<a href=\"javascript:newReg('");
      out.print(study_seq);
      out.write("');\"> [글쓰기]</a>\n");
      out.write("									</div>\n");
      out.write("									<!-- 스터디 개설  END -->\n");
      out.write("									");

										if (user_id.equals(study_creator)) {
									
      out.write("\n");
      out.write("									<button id=\"btnUpload\" class=\"btn btn-sm btn-danger w-100\"\n");
      out.write("										style=\"margin-top: 20px; margin-left: 2px;\" onclick=\"del();\">스터디\n");
      out.write("										삭제하기</button>\n");
      out.write("\n");
      out.write("									");

										} else {
									
      out.write("\n");
      out.write("\n");
      out.write("									<button id=\"btnUpload\" class=\"btn btn-sm btn-danger w-100\"\n");
      out.write("										style=\"margin-top: 20px; margin-left: 2px;\" onclick=\"leave();\">스터디\n");
      out.write("										탈퇴하기</button>\n");
      out.write("\n");
      out.write("									");

										}
									
      out.write("\n");
      out.write("\n");
      out.write("									<hr style=\"margin-top: 10px; margin-bottom: 0px;\" />\n");
      out.write("\n");
      out.write("								</div>\n");
      out.write("							</div>\n");
      out.write("							<!-- 왼쪽 스크립트 끝 -->\n");
      out.write("\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</section>\n");
      out.write("		<!-- 메인 페이지 END-->\n");
      out.write("		<!-- 타이머 START-->\n");
      out.write("		<div id=\"back\" style=\"float: left;\">\n");
      out.write("		   <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.getContextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/time/stopWatchRecords.do\" id=\"frmStopWatch\" name=\"frmStopWatch\" method=\"POST\">\n");
      out.write("		      <input type=\"hidden\" id=\"hiddenHours\" name=\"hour\"/>\n");
      out.write("		      <input type=\"hidden\" id=\"hiddenMin\" name=\"min\"/>\n");
      out.write("		      <input type=\"hidden\" id=\"hiddenSeconds\" name=\"sec\"/>\n");
      out.write("		      <input type=\"hidden\" id=\"hiddenMils\" name=\"mils\"/>\n");
      out.write("		      <input type=\"hidden\" id=\"hiddenFullTime\" name=\"fullTime\"/>\n");
      out.write("		      <div style=\"box-sizing: border-box; width: 300px; height: auto; margin: auto; padding-top: 70px; background: #000; text-align: center;\">\n");
      out.write("		         <div style=\"width: 100%; color: #fff; padding-left: 5px;\">\n");
      out.write("		            <!--[시간]표시 영역-->\n");
      out.write("		            <span id=\"postHours\" style=\"font-size: 75px; letter-spacing: -2px;\">00</span>\n");
      out.write("		            <!--//시간데이터 표시 영역-->\n");
      out.write("		            <span style=\"display: inline-block; vertical-align: top; font-size: 55px;\">:</span>\n");
      out.write("		            <!--[분] 표시 영역-->\n");
      out.write("		            <span id=\"postMin\" style=\"font-size: 75px; letter-spacing: -2px;\">00</span>\n");
      out.write("		            <!--//[분] 표시 영역-->\n");
      out.write("		            <span\n");
      out.write("		                  style=\"display: inline-block; vertical-align: top; font-size: 55px;\">:</span>\n");
      out.write("		            <!--[초] 표시 영역-->\n");
      out.write("		            <span id=\"postSec\" style=\"font-size: 75px; letter-spacing: -2px;\">00</span>\n");
      out.write("		            <!--//[초] 표시 영역-->\n");
      out.write("		            <!--      <span style=\"display: inline-block; margin-left: -3px;\">.</span>-->\n");
      out.write("		            <!--      <span id=\"postMils\" style=\"font-size: 20px; letter-spacing: -1px;\">00</span>-->\n");
      out.write("		         </div>\n");
      out.write("		         <div>\n");
      out.write("		            <ul id=\"recordList\"\n");
      out.write("		               style=\"color: #fff; list-style: none; text-align: center; padding: 0; min-height:100px; max-height: 100px; overflow-y: auto;\">\n");
      out.write("		            </ul>\n");
      out.write("		         </div>\n");
      out.write("		         <div style=\"padding: 10px 0 50px\">\n");
      out.write("		            <button type=\"button\" id=\"startBtn\"\n");
      out.write("		                  style=\"width: 90px; height: 35px; color: #91e374; background: none; border: 1px solid #91e374; cursor: pointer;\">START\n");
      out.write("		            </button>\n");
      out.write("		            <button type=\"button\" id=\"stopBtn\"\n");
      out.write("		                  style=\"width: 90px; height: 35px; color: #fff; background: none; border: 1px solid #ccc; cursor: pointer; margin-left: 10px;\">STOP\n");
      out.write("		            </button>\n");
      out.write("		         </div>\n");
      out.write("		      </div>\n");
      out.write("		\n");
      out.write("		      <button type=\"button\" id=\"submit\">전송</button>\n");
      out.write("		   </form>\n");
      out.write("		</div>\n");
      out.write("	<!-- 타이머 END-->	\n");
      out.write("	</div>\n");
      out.write("	</div>\n");
      out.write("	<!-- 전체 페이지 END-->\n");
      out.write("\n");
      out.write("	<!-- loader -->\n");
      out.write("	<div id=\"ftco-loader\" class=\"fullscreen\">\n");
      out.write("		<svg class=\"circular\" width=\"48px\" height=\"48px\">\n");
      out.write("			<circle class=\"path-bg\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\"\n");
      out.write("				troke-width=\"4\" stroke=\"#eeeeee\"></circle>\n");
      out.write("			<circle class=\"path\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\"\n");
      out.write("				stroke-width=\"4\" stroke-miterlimit=\"10\" stroke=\"#F96D00\"></circle></svg>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<script src=\"/andrea-master/js/jquery.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/jquery-migrate-3.0.1.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/popper.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/bootstrap.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/jquery.easing.1.3.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/jquery.waypoints.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/jquery.stellar.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/owl.carousel.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/jquery.magnific-popup.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/aos.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/jquery.animateNumber.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/scrollax.min.js\"></script>\n");
      out.write("	<script src=\"/andrea-master/js/main.js\"></script>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("//상세보기 이동\n");
      out.write("function doDetail(seq, seq2){\n");
      out.write("	location.href=\"/board/BoardInfo.do?notice_seq=\"+seq+\"&study_seq=\"+seq2;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function newReg(seq){\n");
      out.write("	location.href=\"/board/BoardReg.do?study_seq=\"+seq;\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("		$(function () {\n");
      out.write("			$('#btn-upload').click(function (e) {\n");
      out.write("				e.preventDefault();\n");
      out.write("				$('#file').click();\n");
      out.write("			});\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		function readImage(input) {\n");
      out.write("		    // 인풋 태그에 파일이 있는 경우\n");
      out.write("		    if(input.files && input.files[0]) {\n");
      out.write("		       \n");
      out.write("		        // FileReader 인스턴스 생성\n");
      out.write("		        const reader = new FileReader()\n");
      out.write("		        // 이미지가 로드가 된 경우\n");
      out.write("		        reader.onload = e => {\n");
      out.write("		            const previewImage = document.getElementById(\"preview-image\")\n");
      out.write("		            console.log(\"previewImage : \" + previewImage)\n");
      out.write("		            previewImage.src = e.target.result\n");
      out.write("		        }\n");
      out.write("		        // reader가 이미지 읽도록 하기\n");
      out.write("		        reader.readAsDataURL(input.files[0])\n");
      out.write("		    }\n");
      out.write("		}\n");
      out.write("		// input file에 change 이벤트 부여\n");
      out.write("		const inputImage = document.getElementById(\"input-image\")\n");
      out.write("		inputImage.addEventListener(\"change\", e => {\n");
      out.write("		    readImage(e.target)\n");
      out.write("		})\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$('#btnUpload').on('click', function(event) {\n");
      out.write("	    event.preventDefault();\n");
      out.write("	    \n");
      out.write("	    var form = $('#uploadForm')[0]\n");
      out.write("	    var data = new FormData(form);\n");
      out.write("	    $('#btnUpload').prop('disabled', true);\n");
      out.write("		\n");
      out.write("	    $.ajax({\n");
      out.write("	        type: \"POST\",\n");
      out.write("	        enctype: 'multipart/form-data',\n");
      out.write("	        url: \"/FileUplod2.do\",\n");
      out.write("	        data: data,\n");
      out.write("	        processData: false,\n");
      out.write("	        contentType: false,\n");
      out.write("	        cache: false,\n");
      out.write("	        timeout: 600000,\n");
      out.write("	        success: function (data) {\n");
      out.write("	        	$('#btnUpload').prop('disabled', false);\n");
      out.write("	        	alert('등록이 성공하였습니다.')\n");
      out.write("	        },\n");
      out.write("	        error: function (e) {\n");
      out.write("	            $('#btnUpload').prop('disabled', false);\n");
      out.write("	            alert('등록이 실패하였습니다.');\n");
      out.write("	        }\n");
      out.write("	    });\n");
      out.write("	})\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$(document).ready(function() {\n");
      out.write("		$('#example').DataTable({\n");
      out.write("			\"columns\" : [\n");
      out.write("					{\"width\" : \"10%\"},\n");
      out.write("					{ \"width\" : \"80%\" },\n");
      out.write("					{ \"width\" : \"5%\" },\n");
      out.write("					{ \"width\" : \"5%\" } \n");
      out.write("			]\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("function del() {\n");
      out.write("	if (window.confirm('스터디 그룹을 삭제하시겠습니까?')){\n");
      out.write("		window.location = '/study/del.do?study_name=");
      out.print(study_name);
      out.write("';\n");
      out.write("	}else{\n");
      out.write("	    // They clicked no\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function leave() {\n");
      out.write("	if (window.confirm('스터디 그룹을 탈퇴하시겠습니까?')){\n");
      out.write("		window.location = '/study/leave.do?study_name=");
      out.print(study_name);
      out.write("';\n");
      out.write("	}else{\n");
      out.write("	    // They clicked no\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("\n");
      out.write("function text_modify() {\n");
      out.write("    let study_seq = ");
      out.print(sDTO.getStudy_seq() );
      out.write("\n");
      out.write("    const study_notify = document.getElementById(\"text_modify\").value;\n");
      out.write("    console.log(study_notify);\n");
      out.write("\n");
      out.write("	let request = {\n");
      out.write("            method: 'POST',\n");
      out.write("            body: JSON.stringify({ study_seq : study_seq , study_notify : study_notify }),\n");
      out.write("            headers: {\n");
      out.write("                'Content-Type': 'application/json'\n");
      out.write("            }\n");
      out.write("        };\n");
      out.write("    \n");
      out.write("   fetch(\"/study/textModify.do\", request)\n");
      out.write("	.then(function(res){\n");
      out.write("		return res.text()\n");
      out.write("	})\n");
      out.write("	.then(function(data){\n");
      out.write("		console.log(data);\n");
      out.write("		if(data == 1){\n");
      out.write("		alert(\"수정을 완료되었습니다.\");\n");
      out.write("		}else{\n");
      out.write("		alert(\"수정을 실패했습니다.\");	\n");
      out.write("		}\n");
      out.write("		location.reload();\n");
      out.write("	})\n");
      out.write("}\n");
      out.write("\n");
      out.write("function addZero(num) {\n");
      out.write("    return (num < 10 ? '0' + num : '' + num)\n");
      out.write(" }\n");
      out.write("\n");
      out.write(" /**********************************************************\n");
      out.write("  *                    Default Valirables 선언 영역\n");
      out.write("  *********************************************************/\n");
      out.write(" let stTime = 0\n");
      out.write(" let endTime = 0\n");
      out.write(" let timerStart, hours, min, sec, milisec;\n");
      out.write("\n");
      out.write(" // 화면이 전부 로드 되는 경우 실행함.\n");
      out.write(" $(document).ready(function () {\n");
      out.write("    /**********************************************************\n");
      out.write("     *                    Button Element 영역\n");
      out.write("     *********************************************************/\n");
      out.write("    let startBtn = $(\"#startBtn\");\n");
      out.write("    let stopBtn = $(\"#stopBtn\");\n");
      out.write("    let recordList = $(\"#recordList\");\n");
      out.write("\n");
      out.write("    /**********************************************************\n");
      out.write("     *                    INPUT DATA 보관영역\n");
      out.write("     *********************************************************/\n");
      out.write("    let hiddenHours = $(\"#hiddenHours\");\n");
      out.write("    let hiddenMin = $(\"#hiddenMin\");\n");
      out.write("    let hiddenSec = $(\"#hiddenSeconds\");\n");
      out.write("    let hiddenMils = $(\"#hiddenMils\");\n");
      out.write("\n");
      out.write("    /**********************************************************\n");
      out.write("     *                    Button Event 영역\n");
      out.write("     *********************************************************/\n");
      out.write("\n");
      out.write("    //시작 버튼\n");
      out.write("    window.onload = function () {\n");
      out.write("       stTime = Date.now()\n");
      out.write("             timerStart = setInterval(function () {\n");
      out.write("                let nowTime = new Date(Date.now() - stTime)\n");
      out.write("                // 시간은 분과 초와 다르게 nowTime.getHorus를 해버리면 현재 시간 - 시작 시간의 차이 만큼 시간이 반환 되기 때문에 실제 동작시간과는 거리가 멀다.\n");
      out.write("                // nowTime.getTime() == 밀리세컨드로 반환되므로, 1000 * 60 * 60 ==> 차이 시간을 산출 할 수 있다.\n");
      out.write("\n");
      out.write("                // 시간\n");
      out.write("                hours = addZero(Number((nowTime.getTime() / (1000 * 60 * 60)).toFixed(1)));\n");
      out.write("                hiddenHours.val(hours);\n");
      out.write("\n");
      out.write("                // 분\n");
      out.write("                min = addZero(nowTime.getMinutes())\n");
      out.write("                hiddenMin.val(min);\n");
      out.write("\n");
      out.write("                // 초\n");
      out.write("                sec = addZero(nowTime.getSeconds())\n");
      out.write("                hiddenSec.val(sec);\n");
      out.write("\n");
      out.write("                // 밀리초\n");
      out.write("                milisec = addZero(Math.floor(nowTime.getMilliseconds() / 10))\n");
      out.write("                hiddenMils.val(milisec);\n");
      out.write("\n");
      out.write("                $(\"#hiddenFullTime\").val(hours + \":\" + min + \":\" + sec + \":\" + milisec);\n");
      out.write("\n");
      out.write("                $(\"#postHours\").text(hours);\n");
      out.write("                $(\"#postMin\").text(min);\n");
      out.write("                $(\"#postSec\").text(sec);\n");
      out.write("                $(\"#post\").text(sec);\n");
      out.write("                // document.getElementById('postTestMilisec').innerText = milisec;\n");
      out.write("             }, 1);\n");
      out.write("          };\n");
      out.write("\n");
      out.write("    //스탑 버튼\n");
      out.write("    stopBtn\n");
      out.write("          .off(\"click.stopwatch\")\n");
      out.write("          .on(\"click.stopwatch\", function () {\n");
      out.write("             if (timerStart) {\n");
      out.write("                clearInterval(timerStart) // STOP\n");
      out.write("                if (stopBtn.text() == 'STOP') {\n");
      out.write("                   endTime = Date.now()\n");
      out.write("                   stopBtn.text(\"RESET\");\n");
      out.write("                   startBtn.text(\"RESTART\");\n");
      out.write("                } else { // RESET\n");
      out.write("                   stTime = 0\n");
      out.write("                   hours = 0;\n");
      out.write("                   min = 0\n");
      out.write("                   sec = 0\n");
      out.write("                   milisec = 0\n");
      out.write("                   //시간\n");
      out.write("                   hiddenHours.val(\"0\");\n");
      out.write("                   $(\"#postHours\").text(\"00\");\n");
      out.write("                   //분\n");
      out.write("                   hiddenMin.val(\"0\");\n");
      out.write("                   $(\"#postMin\").text(\"00\");\n");
      out.write("                   //초\n");
      out.write("                   hiddenSec.val(\"0\");\n");
      out.write("                   $(\"#postSec\").text(\"00\");\n");
      out.write("                   //밀리세컨드\n");
      out.write("                   hiddenMils.val(\"0\");\n");
      out.write("                   $(\"#postMils\").text(\"00\");\n");
      out.write("\n");
      out.write("                   startBtn.text(\"START\");\n");
      out.write("                   stopBtn.text(\"STOP\");\n");
      out.write("                   timerStart = null\n");
      out.write("                   $(\"#recordList\").empty();\n");
      out.write("\n");
      out.write("                   $(\"#hiddenFullTime\").val(\"\");\n");
      out.write("                }\n");
      out.write("             }\n");
      out.write("          });\n");
      out.write("\n");
      out.write("    //서버 전송\n");
      out.write("    $(\"#submit\")\n");
      out.write("          .off(\"click.submit\")\n");
      out.write("          .on(\"click.submit\", function () {\n");
      out.write("             // Form - Submit POST 방식\n");
      out.write("             //$(\"#frmStopWatch\").submit();//\n");
      out.write("             $.ajax({\n");
      out.write("                type: \"POST\"\n");
      out.write("                , url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/time/stopWatchRecords.do\"\n");
      out.write("                , contentType: \"application/json\"\n");
      out.write("                , data: JSON.stringify({\n");
      out.write("                   \"hours\": hiddenHours.val()\n");
      out.write("                   , \"min\": hiddenMin.val()\n");
      out.write("                   , \"sec\": hiddenSec.val()\n");
      out.write("                   , \"mils\": hiddenMils.val()\n");
      out.write("                }, null, 4)\n");
      out.write("                , success: function (result) {\n");
      out.write("\n");
      out.write("                }\n");
      out.write("                ,\n");
      out.write("             })\n");
      out.write("          });\n");
      out.write(" });\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
