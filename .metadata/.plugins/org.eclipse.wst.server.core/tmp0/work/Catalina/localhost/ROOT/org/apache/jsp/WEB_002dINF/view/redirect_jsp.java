/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.66
 * Generated at: 2021-10-29 04:06:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class redirect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");

    
    String msg = (String)request.getAttribute("msg");
	String url = (String)request.getAttribute("url");
    

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<style>\n");
      out.write("	html {\n");
      out.write("  font-size: 18px;\n");
      out.write("}\n");
      out.write("body {\n");
      out.write("  color:black;\n");
      out.write("  font-family: \"Questrial\", sans-serif;\n");
      out.write("  background-color: #ffec63;\n");
      out.write("  background-image: linear-gradient(\n");
      out.write("      45deg,\n");
      out.write("      #ffd966 25%,\n");
      out.write("      transparent 25%,\n");
      out.write("      transparent 75%,\n");
      out.write("      #ffd966 75%,\n");
      out.write("      #ffd966\n");
      out.write("    ),\n");
      out.write("    linear-gradient(\n");
      out.write("      -45deg,\n");
      out.write("      #ffd966 25%,\n");
      out.write("      transparent 25%,\n");
      out.write("      transparent 75%,\n");
      out.write("      #ffd966 75%,\n");
      out.write("      #ffd966\n");
      out.write("    );\n");
      out.write("  background-size: 60px 60px;\n");
      out.write("  background-position: 0 0;\n");
      out.write("  animation: slide 4s infinite linear;\n");
      out.write("}\n");
      out.write("\n");
      out.write("@keyframes slide {\n");
      out.write("  from {\n");
      out.write("    background-position: 0 0;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  to {\n");
      out.write("    background-position: -120px 60px;\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write(".modal {\n");
      out.write("  position: absolute;\n");
      out.write("  left: 50%;\n");
      out.write("  top: 50%;\n");
      out.write("  transform: translate(-50%, -50%);\n");
      out.write("  width: auto;\n");
      out.write("  display: inline-flex;\n");
      out.write("  flex-direction: column;\n");
      out.write("  align-items: center;\n");
      out.write("  padding: 1.6rem 3rem;\n");
      out.write("  border: 3px solid black;\n");
      out.write("  border-radius: 5px;\n");
      out.write("  background: white;\n");
      out.write("  box-shadow: 8px 8px 0 rgba(0, 0, 0, 0.2);\n");
      out.write("}\n");
      out.write(".message {\n");
      out.write("  font-size:1.1rem;\n");
      out.write("  margin-bottom: 1.6rem;\n");
      out.write("  margin-top: 0;\n");
      out.write("}\n");
      out.write(".btn {\n");
      out.write("  color:inherit;\n");
      out.write("    font-family:inherit;\n");
      out.write("  font-size: inherit;\n");
      out.write("  background: white;\n");
      out.write("  padding: 0.3rem 3.4rem;\n");
      out.write("  border: 3px solid black;\n");
      out.write("  margin-right: 2.6rem;\n");
      out.write("  box-shadow: 0 0 0 black;\n");
      out.write("  transition: all 0.2s;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn:last-child {\n");
      out.write("  margin: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn:hover {\n");
      out.write("  box-shadow: 0.4rem 0.4rem 0 black;\n");
      out.write("  transform: translate(-0.4rem, -0.4rem);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn:active {\n");
      out.write("  box-shadow: 0 0 0 black;\n");
      out.write("  transform: translate(0, 0);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".options {\n");
      out.write("  display: flex;\n");
      out.write("  flex-direction: row;\n");
      out.write("  justify-content: space-between;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("alert(\"");
      out.print(msg );
      out.write("\")\n");
      out.write("location.href = \"");
      out.print(url );
      out.write("\"\n");
      out.write("</script>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" >\n");
      out.write("<title>redirect</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
